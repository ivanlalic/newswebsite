{"version":3,"sources":["components/header.jsx","hooks/useSelect.jsx","components/form.jsx","components/news.jsx","components/newslist.jsx","App.js","serviceWorker.js","index.js","components/form.module.css"],"names":["Header","title","className","href","useSelect","initialState","options","useState","state","setState","value","onChange","e","target","map","option","key","label","Form","setCategory","category","NewsSelect","styles","search","onSubmit","preventDefault","heading","type","btn_block","News","news","urlToImage","url","description","source","image","src","alt","name","rel","NewsList","App","setNews","useEffect","a","URL","fetch","answer","json","articles","callAPI","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.9745e642.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({title}) => {\r\n    return ( \r\n        <nav className=\"nav-wrapper light-blue darken-3\">\r\n            <a href=\"#!\"className=\"brand-logo center\">{title}</a>\r\n        </nav>\r\n     );\r\n}\r\n \r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React, {useState} from 'react'\r\n\r\nconst useSelect = (initialState, options) => {\r\n\r\n    //State of custom hook\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const NewsSelect = () => (                      //Element\r\n        <select \r\n            className=\"browser-default\"\r\n            value={state}\r\n            onChange={e => setState(e.target.value)}\r\n        >\r\n            {options.map(option => (\r\n                <option key={option.value} value={option.value}>{option.label}</option>\r\n            ))}\r\n        </select>\r\n    );\r\n\r\n    return [state, NewsSelect];\r\n}\r\n \r\nexport default useSelect;\r\n\r\n","import React from 'react';\r\nimport styles from './form.module.css';\r\nimport useSelect from '../hooks/useSelect';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst Form = ({setCategory}) => {\r\n\r\n    //Create options\r\n    const OPTIONS = [\r\n        { value: 'general', label: 'General'},\r\n        { value: 'business', label: 'Business'},\r\n        { value: 'entertainment', label: 'Entertainment'},\r\n        { value: 'health', label: 'Health'},\r\n        { value: 'science', label: 'Science'},\r\n        { value: 'sports', label: 'Sports'},\r\n        { value: 'technology', label: 'Technology'}\r\n    ];\r\n\r\n\r\n\r\n    //Use custom hook\r\n    const [category, NewsSelect] = useSelect('general', OPTIONS); //pass 'general' so when it iniciate it will show that, and the OPTIONS\r\n   \r\n    \r\n    // When user press SUBMITâ†’pass category to app.js\r\n    const searchNews = e => {\r\n        e.preventDefault();\r\n        setCategory(category) //pass the category chosen\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className={`${styles.search} row`}>\r\n            <div className=\"col s12 m8 offset-m2\">\r\n                <form\r\n                    onSubmit={searchNews}\r\n                >\r\n                    <h2 className={styles.heading}>Find News By Category</h2>\r\n                    <NewsSelect />\r\n                    <div className=\"input-field col s12\">\r\n                        <input \r\n                            type=\"submit\"\r\n                            className={`${styles.btn_block} btn-large amber darken-2`}\r\n                            value=\"Search\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nForm.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst News = ({news}) => {\r\n\r\n    //Extract data from News\r\n    const { urlToImage, url, title, description, source } = news;\r\n\r\n\r\n    const image = (urlToImage) ? \r\n    <div className=\"card-image\">\r\n        <img src={urlToImage} alt={title}/>\r\n        <span className=\"card-title\">{source.name}</span>\r\n    </div>\r\n    : \r\n    null;\r\n\r\n\r\n    return ( \r\n        <div className=\"col s12 m6 l4\">\r\n            <div className=\"card\">\r\n                {image}\r\n\r\n                <div className=\"card-content\">\r\n                    <h3>{title}</h3>\r\n                    <p>{description}</p>\r\n                </div>\r\n\r\n                <div className=\"card-action\">\r\n                    <a \r\n                        href={url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"waves-effect waves-light btn\"\r\n                    >\r\n                        Go to article\r\n                    </a>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nNews.propTypes = {\r\n    news: PropTypes.object.isRequired\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport News from './news';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NewsList = ({news}) => {\r\n    return ( \r\n        <div className=\"row\">\r\n            {news.map(news => (\r\n                <News \r\n                    key={news.url}\r\n                    news={news}\r\n                />\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n\r\nNewsList.propTypes = {\r\n    news: PropTypes.array.isRequired\r\n}\r\n\r\nexport default NewsList;\r\n","import React, {Fragment, useState, useEffect} from 'react';\nimport Header from './components/header';\nimport Form from './components/form';\nimport NewsList from './components/newslist';\n\nfunction App() {\n\n  //set Category and news\n  const [category, setCategory] = useState('');\n\n  //Create a state with news\n  const [news, setNews] = useState([]);\n\n  //Call API\n  //Using useEffect will detect any change in \"category\" and will execute\n  useEffect( ()=> {\n\n    const callAPI = async () => {\n\n      const URL=`https://newsapi.org/v2/top-headlines?country=ar&category=${category}&apiKey=d156456776bc43bbb56ac27a15862c2c`\n      const answer = await fetch(URL);\n      const news = await answer.json();\n      setNews(news.articles);\n    }\n    callAPI(); //Call the function to make the request\n\n  }, [category] )\n\n\n\n\n  return (\n    <Fragment>\n      <Header \n        title='News Site'\n      />\n\n      <div className=\"container white\">\n        <Form \n          setCategory={setCategory}\n        />\n\n        <NewsList \n          news={news}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"form_heading__3pKaQ\",\"search\":\"form_search__1IO9q\",\"btn-block\":\"form_btn-block__3jpoI\"};"],"sourceRoot":""}